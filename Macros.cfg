#####################################################################
# 	Macros
#####################################################################


[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="printer", state="off"
  )}

[delayed_gcode CLEAN_NOZZLE_AT_TEMP]
initial_duration: 0
gcode:
  {% set target_temp = printer["gcode_macro PRINT_END"].clean_temp %}
  {% set extruder_temp = printer.extruder.temperature %}
  {% if extruder_temp > target_temp %}
    STATUS_CLEANING
    UPDATE_DELAYED_GCODE ID=CLEAN_NOZZLE_AT_TEMP DURATION=3
  {% else %}
    CLEAN_NOZZLE
    STATUS_READY
  {% endif %}

[homing_override]
gcode:

  {% set z_home_x= 175.0 %}
  {% set z_home_y= 175 %}
  {% set homing_speed = printer.configfile.settings.stepper_x.homing_speed %}
  {% set homed_axes = printer.toolhead.homed_axes %}
    
  G90 ;absolute positioning
  
  {% if not 'Z' in params and 'Y' in params and 'X' in params %} ;G28 XY
    _Z_HOP
    _HOMEYX
  {% endif %}
  
  {% if not 'Z' in params and not 'Y' in params and 'X' in params %} ;G28 X
    _Z_HOP
    _HOMEYX
  {% endif %}
  
  {% if not 'Z' in params and 'Y' in params and not 'X' in params %} ;G28 Y
    _Z_HOP
    ## Home Y
    G28 Y0
  {% endif %}
  
  {% if 'Z' in params and not 'Y' in params and not 'X' in params %} ;G28 Z
    {% set out = [] %}
    {% set dummy = out.append("%s" % homed_axes) %}
    {action_respond_info(out|join("\n"))}
    _Z_HOP
    {%if "x" not in homed_axes %}
      _HOMEYX
    {% elif "y" not in homed_axes %}
      G28 Y0
    {% endif %}
    G1 X{z_home_x} Y{z_home_y} F{homing_speed*60}
    G28 Z0
    _Z_HOP
  {% endif %}
  
  {% if not 'Z' in params and not 'Y' in params and not 'X' in params %} ;G28
    _Z_HOP
    _HOMEYX
    G1 X{z_home_x} Y{z_home_y} F{homing_speed*60}
    G28 Z0
    _Z_HOP
      
  {% endif %}
set_position_z:0


[gcode_macro _Z_HOP]
gcode:
  {% set z_homing_speed= printer.configfile.settings.stepper_z.homing_speed %}
  {% set z_hop = params.Z_HOP|default(10.0)|float %}
  G1 Z{z_hop} F{z_homing_speed * 60}
  
[gcode_macro _HOMEYX]
gcode:
  ## Home Y
  G28 Y0
  ## Home X
  G28 X0
  
[gcode_macro MOVE_AROUND]
gcode:
  G90
  
  G1 X175 Y350 F15000
  G1 X175 Y0 F15000
  G1 X0 Y175 F15000
  G1 X350 Y175 F15000
  
  G1 X0 Y50 F15000
  G1 X0 Y350 F15000
  G1 X350 Y350 F15000
  G1 X350 Y50 F15000
  G1 X0 Y50 F15000
  
  G28

[gcode_macro PURGE_LINE]
gcode:
    # This is for a 300mm bed. If you have a diferent bed size you may want to adjust the line below
    {% set x_pos = 135 %}
    {% set y_pos = -5 %}
    SAVE_GCODE_STATE NAME=purge_line
    M117 Purging at X{ x_pos } Y{ x_pos }                                                      
    
    # The start pos will be within the "handle" of the flex plate where there is some extra Y space available so we can go all the way to Y0
    # If your setup does not have this extra space then just increase the y valie in the line "G1 X{ rand_pos } Y0 Z1 F18000"
    M83  ; extruder relative mode
    M106 S255
    
    G1 X{x_pos} Y{y_pos} F9000.0 ; go outside print area
    G1 Z0.3 F600
    G91
    G92 E0                          ; zero the extruder
    G1 Z1 E15 F100; Purge Bubble
    G1 X5 Z-2 E10 ; Move
    G1 X30.0 E10.0  F1000.0 ; intro line
    G1 X50.0 E12.5  F1000.0 ; intro line
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    RESTORE_GCODE_STATE NAME=purge_line

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z} F6000
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E50 F300 # fast-load
    G1 E50 F300 # fast-load
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    # G1 E25 F1000 # purge
    # G1 E-101 F1500 # fast-unload
    G1 E15 F1000
    G1 E-15 F1500
    G4 P5000
    G92 E0
    G1 E7 F500
    G1 E-10 F1000
    G4 P5000
    G1 E-5 F300
    G4 P5000
    G92 E0
    G1 E-75 F1000
    G92 E0
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28 Z0
    STATUS_READY    
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
[gcode_macro OFF]
gcode:
  STATUS_OFF


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    SHUTDOWN_HANDLER_START_PRINT
    {% set BED = params.BED|default(0)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
    {% set CHAMBER = params.CHAMBER|default(0)|int %}  
    {% set FILAMENT = params.FILAMENT_TYPE|default("default") %}  
    # SET_HEATER_TEMPERATURE HEATER=CHAMBER TARGET=chamber_temp
    
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=controller_fan TARGET=35
    {% if BED >= 90%}
      SET_FAN_SPEED FAN=nevermore SPEED=0.3
    {% endif %}

    
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={150}

    #TEMPERATURE_WAIT SENSOR=extruder MINIMUM={149}
    
    G32
    
    # {% if BED<50 %}
    #   #BED_MESH_CALIBRATE PROFILE=default
    #   BED_MESH_PROFILE LOAD=default
    # {% endif %}
    # {% if BED>=50 and BED<=80 %}
    #   #BED_MESH_CALIBRATE PROFILE=warm
    #   BED_MESH_PROFILE LOAD=warm
    # {% endif %}
    # {% if BED>80 %}
    #   #BED_MESH_CALIBRATE PROFILE=hot
    #   BED_MESH_PROFILE LOAD=hot
    # {% endif %}
    
    # BED_MESH_PROFILE LOAD={FILAMENT}
    
    STATUS_HEATING
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}
    
    M106 S255
    CARTOGRAPHER_TOUCH METHOD=auto

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    
    BED_MESH_CALIBRATE ADAPTIVE=1 PROFILE=adaptive
    M106 S0
    
    G1 Z10
    G1 X40 F18000
    G1 Y-7 F18000
    
    
    
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER - 0.2} MAXIMUM={EXTRUDER + 0.2}

    CLEAN_NOZZLE
    PURGE_LINE
    STATUS_PRINTING

    SET_PIN PIN=caselight_0 VALUE=0.15
    SET_PIN PIN=caselight_1 VALUE=0.10

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
variable_clean_temp = 200
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    SET_PIN PIN=caselight_0 VALUE=1.0
    SET_PIN PIN=caselight_1 VALUE=0.7
    {% set extruder = printer.extruder.temperature %}
    M400                           ; wait for buffer to clear

    
    SET_GCODE_VARIABLE MACRO=PRINT_END VARIABLE=clean_temp VALUE=200
    UPDATE_DELAYED_GCODE ID=CLEAN_NOZZLE_AT_TEMP DURATION=3
    
    G92 E0                         ; zero the extruder
    {% if extruder >= 200 %}
      G1 E-10.0 F1500                ; retract filament
    {% endif %}

    G91                            ; relative positioning
    G0 Z10.00 X-20.0 Y20.0 F9000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    
    STATUS_BUSY
    # TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=200
    # {% if extruder >= 150 %}
    #   CLEAN_NOZZLE
    # {% endif %}
    
    G0  X175 Y340 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    #STATUS_OFF
    STATUS_READY
    #M84 # Disable steppers
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=controller_fan TARGET=50
    SET_FAN_SPEED FAN=nevermore SPEED=0.0
    SHUTDOWN_HANDLER_STOP_PRINT
    CONDITIONAL_SHUTDOWN
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


[gcode_macro GO_CENTER]
gcode:
  G1 X175 Y175 F6000

[gcode_macro _PURGE]
variable_start_x: 35
variable_start_y: -4
variable_start_z: 8
variable_purge_amount: 7
variable_retract_amount: 1
gcode:
  SAVE_GCODE_STATE NAME=purge
  {% set extruder = printer.extruder.temperature %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set max_x = printer.toolhead.axis_maximum.x %}
  {% set max_y = printer.toolhead.axis_maximum.y %}
  {% if extruder > 218 %}
    M106 S255
    G90 
    G92 E0
    {% if act_z < start_z %}
      G1 Z{start_z} F6000
    {% endif %}
    G1 X{start_x} Y{start_y} F6000
    G1 Z{start_z} F6000
    M83
    G1 E{purge_amount} F600
    # G1 E-{retract_amount} F1200
    M106 S0
  {% endif %}
  RESTORE_GCODE_STATE NAME=purge
  

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 45
variable_start_y: -7
variable_start_z: 3
variable_wipe_dist: 54
variable_wipe_qty: 7
variable_wipe_spd: 400
variable_move_spd: 400
variable_raise_distance: 20

gcode:
  STATUS_CLEANING
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  SET_VELOCITY_LIMIT VELOCITY=500 ACCEL=5000
  {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
  {% endif %}
  
  {% set act_x = printer.toolhead.position.x|float %}
  {% set act_y = printer.toolhead.position.y|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set max_x = printer.toolhead.axis_maximum.x %}
  {% set max_y = printer.toolhead.axis_maximum.y %}
  {% set extruder = printer.extruder.temperature %}
  
  G90                                            ; absolute positioning
  ## Move nozzle to start position
  G1 Z20 F1500
  G1 X{start_x-5} F{move_spd * 60}
  G1 Y{start_y} F{move_spd * 60}
  G1 Z{start_z}
  G1 X{start_x} F{move_spd * 60}
  
  ## Wipe nozzle
  
  # {% for wipes in range(1, (wipe_qty + 1)) %}
  #   G1 X{start_x + wipe_dist} Y{start_y} F{wipe_spd * 60}
  #   G1 X{start_x} Y{start_y} F{wipe_spd * 60}
  # {% endfor %}

  

  {% for wipe in range(0, (wipe_qty)) %}
    G1 X{start_x + wipe_dist} Y{start_y + wipe * 0.5} F{wipe_spd * 60}
    G1 X{start_x} Y{start_y + wipe * 0.5} F{wipe_spd * 60}
  {% endfor %}

  # PURGE
  # G1 Z{start_z} F1500
  # G1 X{start_x + wipe_dist} Y{start_y - 5} F{wipe_spd * 60}
  
  ## Raise nozzle to previous level
  {% if act_z > start_z %}
    G1 Z{act_z} F1500
  {% else %}
    G1 Z30 F1500
  {% endif %}
  # Move head to previous position
  {% if act_x > 50 and act_y > 50 %}
    G1 X{[act_x,max_x]|min} Y{[act_y,max_y]|min} F{move_spd * 60}
  {% else %}
    G1 Y50 F{move_spd * 60}
  {% endif %}
  STATUS_READY
  RESTORE_GCODE_STATE NAME=clean_nozzle_state
 


[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

